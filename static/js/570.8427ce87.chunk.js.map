{"version":3,"file":"static/js/570.8427ce87.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst setContent = (proc, Component, newItemLoading) => {\n\tswitch (proc) {\n\t\tcase \"waiting\":\n\t\t\treturn <Spinner />\n\t\tcase \"loading\":\n\t\t\treturn newItemLoading ? <Component /> : <Spinner />\n\t\tcase \"confirmed\":\n\t\t\treturn <Component />\n\t\tcase \"error\":\n\t\t\treturn <ErrorMessage />\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected process state\");\n\t}\n}\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(230);\n\tconst [endComics, setEndComics] = useState(false);\n\n\tconst { getAllComics, proc, setProcess } = useMarvelService();\n\n\tuseEffect(() => onRequest(offset, true), []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t\t\t.then(() => setProcess(\"confirmed\"));\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = (newComicsList.length < 8) ? true : false;\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetEndComics(ended);\n\t};\n\n\tconst renderItems = arr => {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\"\n\t\t\t\t\tkey={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{setContent(proc, () => renderItems(comicsList), newItemLoading)}\n\n\t\t\t<button className=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ \"display\": endComics ? \"none\" : \"block\" }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\"\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\" content=\"Page with list of our comics\" />\r\n            <title>Comics page</title>\r\n         </Helmet>\r\n         <AppBanner />\r\n         <ComicsList />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["setContent","proc","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","endComics","setEndComics","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","arr","items","map","item","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList"],"sourceRoot":""}