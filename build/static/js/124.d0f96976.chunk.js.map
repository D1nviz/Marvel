{"version":3,"file":"static/js/124.d0f96976.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.jsx","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundaty.jsx","components/pages/MainPage.jsx","services/MarvelService.jsx","hooks/http.hook.jsx"],"sourcesContent":["import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt=\"Error\" />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from \"react\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n\n\tconst [char, setChar] = useState({});\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 60000);\n\n\t\treturn () => {\n\t\t\t clearInterval(timerId)\n\t\t}\n  }, [])\n\n  const onCharLoaded = (char) => {\n\t\tsetChar(char);\n  }\n\n  const updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\t\tgetCharacter(id).then(onCharLoaded);\n  }\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt=\"mjolnir\"\n\t\t\t\t\tclassName=\"randomchar__decoration\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n\tlet imgStyle = {'objectFit' : 'cover'};\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t imgStyle = {'objectFit' : 'contain'};\n\t}\n\n\treturn (\n\t\t <div className=\"randomchar__block\">\n\t\t\t  <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n\t\t\t  <div className=\"randomchar__info\">\n\t\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t\t<p className=\"randomchar__descr\">\n\t\t\t\t\t\t {description}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t\t <a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t  <div className=\"inner\">homepage</div>\n\t\t\t\t\t\t </a>\n\t\t\t\t\t\t <a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t  <div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t </a>\n\t\t\t\t\t</div>\n\t\t\t  </div>\n\t\t </div>\n\t)\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(304);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = async (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\t\tsetCharList([...charList, ...newCharList]);\n\t\tsetnewItemLoading(false);\n\t\tsetOffset(offset + 9);\n\t\tsetCharEnded(ended);\n\t}\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { 'objectFit': 'cover' };\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = { 'objectFit': 'unset' };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tref={el => itemRefs.current[i] = el}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === \"Enter\") {\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t<TransitionGroup component={null}>\n\t\t\t\t\t{items}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t)\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ 'display': charEnded ? 'none' : 'block' }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\n\t\t\t<div className=\"skeleton\">\n\t\t\t\t<div className=\"pulse skeleton__header\">\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from \"../skeleton/Skeleton\"\n\n\nimport './charInfo.scss';\n\n\nconst CharInfo = (props) => {\n\n\tconst [char, setChar] = useState(null);\n\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => updateChar(), [props.charId]);\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst { charId } = props;\n\t\tif (!charId) return;\n\t\t\n\t\tgetCharacter(charId).then(onCharLoaded)\n\t}\n\n\tconst onCharLoaded = char => setChar(char);\n\t\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\n\tlet slicedComics = comics.length > 9 ? comics.slice(0, 10) : comics;\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail}\n\t\t\t\t\talt={name}\n\t\t\t\t\tstyle={{ objectFit: thumbnail.includes(\"image_not_available\") ? \"contain\" : \"cover\" }} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">\n\t\t\t\t{description}\n\t\t\t</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics.length === 0 ? \"There is no comics with this character\" : null}\n\t\t\t\t{\n\t\t\t\t\tslicedComics.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n   state = {\r\n      error: false\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      console.log(error, errorInfo);\r\n      this.setState({\r\n         error: true\r\n      })\r\n   } \r\n\r\n   render() {\r\n      if(this.state.error) {\r\n         return <h2>Something went wrong</h2>\r\n      } else {\r\n         return this.props.children;\r\n      }\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundaty\";\r\n\r\nimport decoration from '../../resources/img/spiderman.png';\r\n\r\nconst MainPage = () => {\r\n   const [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => setChar(id);\r\n   return (\r\n      <>\r\n         <ErrorBoundary> <RandomChar /></ErrorBoundary>\r\n         <div className=\"char__content\">\r\n            <CharList onCharSelected={onCharSelected} />\r\n            <ErrorBoundary> <CharInfo charId={selectedChar} /></ErrorBoundary>\r\n         </div>\r\n         <div className=\"box-decoration\">\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n         </div>\r\n\r\n      </>\r\n   )\r\n}\r\n\r\nexport default MainPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = process.env.REACT_APP_API_BASE ;\r\n\tconst _apiKey =`apikey=${process.env.REACT_APP_API_KEY}`;\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} pages`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t\turl: comics.urls[0].url\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n   const [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n   const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"aplication/json\"}) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n         const response = await fetch(url, {method, body, headers});\r\n\r\n         if (!response.ok) throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        \r\n         const data = await response.json();\r\n\r\n         setLoading(false);\r\n         return data;\r\n\r\n      } catch  (e) {\r\n         setLoading(false);\r\n         setError(e.message);\r\n         throw e;\r\n      }\r\n   }, []);\r\n\r\n   const clearError = useCallback(() => setError(null), []);\r\n\r\n   return {loading, request, error, clearError}\r\n}"],"names":["_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","char","name","description","thumbnail","homepage","wiki","imgStyle","_jsxs","className","children","href","_useState","useState","_useState2","_slicedToArray","setChar","_useMarvelService","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","_useState3","_useState4","newItemLoading","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newCharList","ended","wrap","_context","prev","next","length","concat","_toConsumableArray","stop","_x","apply","arguments","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","_Fragment","comics","slicedComics","slice","includes","charId","skeleton","Skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","selectedChar","RandomChar","CharList","CharInfo","decoration","_useHttp","setLoading","setError","request","useCallback","url","method","body","headers","response","data","_args","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","useHttp","_apiBase","process","_apiKey","res","results","_transformCharacter","_ref2","_callee2","_context2","getComic","_ref3","_callee3","_context3","_transformComics","_x2","getAllComics","_ref4","_callee4","_args4","_context4","path","extension","urls","_comics$textObjects$","title","pageCount","language","textObjects","price","prices"],"sourceRoot":""}