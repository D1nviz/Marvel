{"version":3,"file":"static/js/570.9400c99b.chunk.js","mappings":"8OA6EA,EAnEmB,WAElB,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA4BT,EAAAA,EAAAA,UAAS,KAAIU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BG,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAYF,EAAZE,aAAcC,EAAOH,EAAPG,QAASC,EAAKJ,EAALI,OAE/BC,EAAAA,EAAAA,YAAU,kBAAMC,EAAUZ,GAAQ,EAAK,GAAE,IAEzC,IAAMY,EAAY,SAACZ,EAAQa,GAChBhB,GAAVgB,GACAL,EAAaR,GAAQc,KAAKC,EAC3B,EAEMA,EAAqB,SAACC,GAC3B,IAAIC,EAASD,EAAcE,OAAS,EACpCzB,GAAc,SAAAD,GAAU,SAAA2B,QAAAC,EAAAA,EAAAA,GAAQ5B,IAAU4B,EAAAA,EAAAA,GAAKJ,GAAa,IAC5DnB,GAAkB,GAClBI,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BK,EAAaY,EACd,EAuBMI,EArBc,SAAAC,GACnB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GAC5B,OACCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,UAE3BC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAZ,OAAaK,EAAKQ,IAAKJ,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKO,IAAKT,EAAKU,UAAWC,IAAI,eAAeR,UAAU,sBACvDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEJ,EAAKY,SACzCV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEJ,EAAKa,YAJtCZ,EAQR,IAEA,OACCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAC1BP,GAGJ,CAEciB,CAAY9C,GACpB+C,EAAe7B,GAAQgB,EAAAA,EAAAA,KAACc,EAAAA,EAAY,IAAM,KAC1CC,EAAUhC,IAAYb,GAAiB8B,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,IAAM,KAE3D,OACCb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CAC3BW,EACAE,EACApB,GAEDK,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mCACjBgB,SAAU/C,EACVgD,MAAO,CAAE,QAAWxC,EAAY,OAAS,SACzCyC,QAAS,kBAAMjC,EAAUZ,EAAO,EAAC4B,UAEjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAC,kBAK3B,EC/DA,EATmB,WAChB,OACGC,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAlB,SAAA,EACGF,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,KACVrB,EAAAA,EAAAA,KAACsB,EAAU,MAGpB,C","sources":["components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(230);\n\tconst [endComics, setEndComics] = useState(false);\n\n\tconst { getAllComics, loading, error } = useMarvelService();\n\n\tuseEffect(() => onRequest(offset, true), []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset).then(onComicsListLoaded);\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = (newComicsList.length < 8) ? true : false;\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetEndComics(ended);\n\t};\n\n\tconst renderItems = arr => {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\"\n\t\t\t\t\tkey={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t)\n\t}\n\n\tconst items = renderItems(comicsList);\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\n\t\t\t<button className=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ \"display\": endComics ? \"none\" : \"block\" }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n   return (\r\n      <>\r\n         <AppBanner/>\r\n         <ComicsList/>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","endComics","setEndComics","_useMarvelService","useMarvelService","getAllComics","loading","error","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","_jsx","className","children","_jsxs","Link","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}